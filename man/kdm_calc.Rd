% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kdmfuns.R
\name{kdm_calc}
\alias{kdm_calc}
\title{Calculate biological ages in a dataset.}
\usage{
kdm_calc(data, agevar, biomarkers, fit = NULL, link = "linear",
  s_ba2 = NULL, weightvar = NULL, controls = NULL)
}
\arguments{
\item{data}{The dataset for calculating biological age.}

\item{agevar}{A character vector (length=1) indicating the name of the varialbe for age.}

\item{biomarkers}{A character vector indicating the names of the variables for the biomarkers to use in calculating biological age.}

\item{fit}{An S3 object for model fit. If the value is NULL, then the parameters to use for training biological age are calculated.}

\item{link}{"linear" is default and based on the original KDM algorithm; experimental use of log-linear link (use "log") is available for advanced users.}

\item{s_ba2}{A particular fit parameter. Advanced users can modify this parameter to control the variance of biological age. If left NULL, defaults are used.}

\item{weightvar}{A character vector indicating survey weights. If supplied, a weighted regression is conducted. If not, weights are not used.}

\item{controls}{A character vector indicating control variables (if any) to be used for calculating biological age.}
}
\description{
Calculate biological ages in a dataset.
}
\examples{
#(not run)
#Train biological age parameters
train = kdm_calc(nhanes,agevar='age',
  biomarkers=c('sysbp','totchol','bun','cmv','mcv'))

#Use training data to calculate out-of-sample biological ages
biocalc = kdm_calc(data,agevar='age',
  biomarkers=c('sysbp','totchol','bun','cmv','mcv'),
  fit=train$fit)

#combine biological ages and training data
data$bioage = extract_data(biocalc)[,'bioage']
}
